#!/bin/bash
BASE_DIR=../../../alien-ofelia-conet-ccnx
RANGE_S=1
SERVER[0]=192.168.64.3
PORT=9699
EX_NAME=$(pwd | awk -F "/" '{print $NF}')
BASE_NAME=example3
NAME=mb3_
N_CONTENT=20

i="0"
while [ "$i" -lt "$N_CONTENT" ]; do

NID[$i]=ccn:/$BASE_NAME/$NAME$i
    i=$[$i+1]
done

RANGE=10

NID_CCNX[0]=ccn:/$BASE_NAME

TIME=5
TIME2=30

# This While Loop Checs The CMDLINE Input Parameter
while [ $# -gt 0 ]; do
    if [ "$1" = "-s" ]; then
      if [ $# -lt 2 ]; then
        usage
      fi
       SERVER=$2
      shift 2
    elif [ "$1" = "-nx" ]; then
      if [ $# -lt 2 ]; then
        usage
      fi
      NID_CCNX=$2
      shift 2
    elif [ "$1" = "-p" ]; then
      if [ $# -lt 2 ]; then
        usage
      fi
      PORT=$2
      shift 2
    elif [ "$1" = "-t" ]; then
      if [ $# -lt 2 ]; then
        usage
      fi
      TIME=$2
     shift 2
    elif [ "$1" = "-n" ]; then
      if [ $# -lt 2 ]; then
        usage
      fi
      #NID=$2
      EX_NAME=$2
      shift 2
    else
      break
    fi
done

export CCND_LOG=./log.$EX_NAME
export CCN_LOCAL_SOCKNAME=/tmp/.sock.ccnx.$EX_NAME
#kill $(pidof ccnd) > /dev/null 2>&1


# Start The Loop Of Requests 
i="0"
j="0"
#while [ "$i" -lt "15" ]; do
while [ 1 ]; do
     if  [ "$(pidof ccnd)" ];then
     	echo "Old CCND pid: $(pidof ccnd)"	
#     	sudo kill $(pidof ccnd)
#     fi
     else 
	./$EX_NAME-ccnd 1 1 0 0 0  > /dev/null 2>&1 &
        #$BASE_DIR/csrc/ccnd/ccnd 1 1 0 0 0  > /dev/null 2>&1 &
        echo "Attendo avvio di ccnd "
        sleep $TIME
        echo "New CCND pid: $(pidof ccnd)" 
     fi	#
#     number=$RANDOM
#     let "number %= $RANGE"
#     if	[ "$i" -eq "15" ];then
#     	j=$[$j+1]
#     fi
     echo ${SERVER[($j % $RANGE_S)]}
     #echo ${NID_CCNX[($j % $RANGE_S)]}
     #echo "$BASE_DIR/csrc/libexec/ccndc add ${NID_CCNX[($j % $RANGE_S)]} udp ${SERVER[($j % $RANGE_S)]} $PORT"
     #echo "$BASE_DIR/csrc/libexec/ccndc add ccnx:/ udp ${SERVER[($j % $RANGE_S)]}"
     #echo "j=$j"
     #echo "i=$i"

     $BASE_DIR/csrc/libexec/ccndc add ${NID_CCNX[($j % $RANGE_S)]} udp ${SERVER[($j % $RANGE_S)]} $PORT
     $BASE_DIR/csrc/libexec/ccndc add ccnx:/ udp ${SERVER[($j % $RANGE_S)]} 
#     $BASE_DIR/csrc/cmd/ccncatchunks2 -d -p 20 -s ${NID[$number]} &
#     ip -s neigh flush all
     echo ${NID[($i % $RANGE)]}
     #echo "$BASE_DIR/csrc/cmd/ccncatchunks2 -d -p 20 -s ${NID[($i % $RANGE)]} &"

     $BASE_DIR/csrc/cmd/ccncatchunks2 -d -p 20 -s ${NID[($i % $RANGE)]} &
     sleep $TIME
     if  [ "$(pidof ccncatchunks2)" ];then  
         kill $(pidof ccnd) > /dev/null 2>&1
         kill $(pidof ccncatchunks2) > /dev/null 2>&1
         echo "((((((((((((((((( sveglia!!! )))))))))))))))))))"
     fi	 
     echo "@@@@ risveglio @@@@"     
    
     i=$[$i+1]
     i=$(( $i % $RANGE ))
     if [ "$i" -eq "0" ]; then
   	j=$[$j+1]
     fi
     if [ "$j" -eq "4" ]; then
        break 
     fi	
done

# Start the second cycle of requests
i=$[$i+10]
RANGE=20
j="0"
echo "@@@@@@@@@@@@@@@@@@@@@@@@@"
sleep $TIME2
TIME=5
while [ 1 ]; do
     if  [ "$(pidof ccnd)" ];then
        echo "Old CCND pid: $(pidof ccnd)"      
#       sudo kill $(pidof ccnd)
#     fi
     else #
        ./$EX_NAME-ccnd 1 1 0 0 0  > /dev/null 2>&1 &
        #$BASE_DIR/csrc/ccnd/ccnd 1 1 0 0 0  > /dev/null 2>&1 &
        echo "Attendo avvio di ccnd "
        sleep $TIME
        echo "New CCND pid: $(pidof ccnd)" 
     fi #
#     number=$RANDOM
#     let "number %= $RANGE"
#     if        [ "$i" -eq "15" ];then
#       j=$[$j+1]
#     fi
     echo ${SERVER[($j % $RANGE_S)]}
     #echo ${NID_CCNX[($j % $RANGE_S)]}
     #echo "$BASE_DIR/csrc/libexec/ccndc add ${NID_CCNX[($j % $RANGE_S)]} udp ${SERVER[($j % $RANGE_S)]} $PORT"
     #echo "$BASE_DIR/csrc/libexec/ccndc add ccnx:/ udp ${SERVER[($j % $RANGE_S)]}"
     #echo "j=$j"
     #echo "i=$i"

     $BASE_DIR/csrc/libexec/ccndc add ${NID_CCNX[($j % $RANGE_S)]} udp ${SERVER[($j % $RANGE_S)]} $PORT
     $BASE_DIR/csrc/libexec/ccndc add ccnx:/ udp ${SERVER[($j % $RANGE_S)]} 
#     $BASE_DIR/csrc/cmd/ccncatchunks2 -d -p 20 -s ${NID[$number]} &
     echo ${NID[($i % $RANGE)]}
    # echo "$BASE_DIR/csrc/cmd/ccncatchunks2 -d -p 20 -s ${NID[($i % $RANGE)]} &"

     $BASE_DIR/csrc/cmd/ccncatchunks2 -d -p 20 -s ${NID[($i % $RANGE)]} &
     sleep $TIME
     if  [ "$(pidof ccncatchunks2)" ];then  
         kill $(pidof ccnd) > /dev/null 2>&1
         kill $(pidof ccncatchunks2) > /dev/null 2>&1
         echo "((((((((((((((((( sveglia!!! )))))))))))))))))))"
     fi  
     echo "@@@@ risveglio @@@@"     
    
     i=$[$i+1]
     i=$(( $i % $RANGE ))
     if [ "$i" -eq "0" ]; then
        j=$[$j+1]
	i=$[$i+10]
     fi
     if [ "$j" -eq "4" ]; then
        break 
     fi 
done

