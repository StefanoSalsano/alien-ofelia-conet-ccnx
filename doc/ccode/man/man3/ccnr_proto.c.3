.TH "ccnr/ccnr_proto.c" 3 "4 Feb 2013" "Version 0.7.1" "Content-Centric Networking in C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ccnr/ccnr_proto.c \- 
.PP
Part of ccnr - CCNx Repository Daemon.  

.SH SYNOPSIS
.br
.PP
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBCCNR_MAX_RETRY\fP   5"
.br
.ti -1c
.RI "#define \fBENUMERATION_STATE_TICK_MICROSEC\fP   1000000"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "static enum \fBccn_upcall_res\fP \fBr_proto_start_write\fP (struct \fBccn_closure\fP *selfp, enum \fBccn_upcall_kind\fP kind, struct \fBccn_upcall_info\fP *info, int marker_comp)"
.br
.ti -1c
.RI "static enum \fBccn_upcall_res\fP \fBr_proto_start_write_checked\fP (struct \fBccn_closure\fP *selfp, enum \fBccn_upcall_kind\fP kind, struct \fBccn_upcall_info\fP *info, int marker_comp)"
.br
.ti -1c
.RI "static enum \fBccn_upcall_res\fP \fBr_proto_begin_enumeration\fP (struct \fBccn_closure\fP *selfp, enum \fBccn_upcall_kind\fP kind, struct \fBccn_upcall_info\fP *info, int marker_comp)"
.br
.ti -1c
.RI "static enum \fBccn_upcall_res\fP \fBr_proto_continue_enumeration\fP (struct \fBccn_closure\fP *selfp, enum \fBccn_upcall_kind\fP kind, struct \fBccn_upcall_info\fP *info, int marker_comp)"
.br
.ti -1c
.RI "static enum \fBccn_upcall_res\fP \fBr_proto_bulk_import\fP (struct \fBccn_closure\fP *selfp, enum \fBccn_upcall_kind\fP kind, struct \fBccn_upcall_info\fP *info, int marker_comp)"
.br
.ti -1c
.RI "static int \fBname_comp_equal_prefix\fP (const unsigned char *data, const struct \fBccn_indexbuf\fP *indexbuf, unsigned int i, const void *buf, size_t length)"
.br
.RI "\fICompare a name component at index i to bytes in buf and return 1 if they are equal in the first length bytes. \fP"
.ti -1c
.RI "PUBLIC enum \fBccn_upcall_res\fP \fBr_proto_answer_req\fP (struct \fBccn_closure\fP *selfp, enum \fBccn_upcall_kind\fP kind, struct \fBccn_upcall_info\fP *info)"
.br
.ti -1c
.RI "PUBLIC void \fBr_proto_uri_listen\fP (struct \fBccnr_handle\fP *ccnr, struct ccn *ccn, const char *uri, \fBccn_handler\fP p, intptr_t intdata)"
.br
.ti -1c
.RI "PUBLIC void \fBr_proto_init\fP (struct \fBccnr_handle\fP *ccnr)"
.br
.ti -1c
.RI "PUBLIC void \fBr_proto_activate_policy\fP (struct \fBccnr_handle\fP *ccnr, struct \fBccnr_parsed_policy\fP *pp)"
.br
.RI "\fIInstall the listener for the namespaces that the parsed policy says to serve. \fP"
.ti -1c
.RI "PUBLIC void \fBr_proto_deactivate_policy\fP (struct \fBccnr_handle\fP *ccnr, struct \fBccnr_parsed_policy\fP *pp)"
.br
.RI "\fIUninstall the listener for the namespaces that the parsed policy says to serve. \fP"
.ti -1c
.RI "PUBLIC int \fBr_proto_append_repo_info\fP (struct \fBccnr_handle\fP *ccnr, struct \fBccn_charbuf\fP *rinfo, struct \fBccn_charbuf\fP *names, const char *info)"
.br
.RI "\fIConstruct a charbuf with an encoding of a RepositoryInfo. \fP"
.ti -1c
.RI "static struct \fBccn_charbuf\fP * \fBr_proto_mktemplate\fP (struct \fBccnr_expect_content\fP *md, struct \fBccn_upcall_info\fP *info)"
.br
.ti -1c
.RI "PUBLIC enum \fBccn_upcall_res\fP \fBr_proto_expect_content\fP (struct \fBccn_closure\fP *selfp, enum \fBccn_upcall_kind\fP kind, struct \fBccn_upcall_info\fP *info)"
.br
.ti -1c
.RI "static int \fBr_proto_policy_update\fP (struct ccn_schedule *sched, void *clienth, struct \fBccn_scheduled_event\fP *ev, int flags)"
.br
.ti -1c
.RI "static int \fBr_proto_policy_complete\fP (struct \fBccn_closure\fP *selfp, enum \fBccn_upcall_kind\fP kind, struct \fBccn_upcall_info\fP *info)"
.br
.ti -1c
.RI "static int \fBr_proto_check_exclude\fP (struct \fBccnr_handle\fP *ccnr, struct \fBccn_upcall_info\fP *info, struct \fBccn_charbuf\fP *name)"
.br
.RI "\fIReturns 1 if the Exclude in the interest described by the info parameter would exclude the full name in name. \fP"
.ti -1c
.RI "void \fBr_proto_finalize_enum_state\fP (struct \fBhashtb_enumerator\fP *e)"
.br
.ti -1c
.RI "static int \fBreap_enumerations\fP (struct ccn_schedule *sched, void *clienth, struct \fBccn_scheduled_event\fP *ev, int flags)"
.br
.RI "\fIRemove expired enumeration table entries. \fP"
.ti -1c
.RI "static void \fBreap_enumerations_needed\fP (struct \fBccnr_handle\fP *ccnr)"
.br
.ti -1c
.RI "void \fBr_proto_dump_enums\fP (struct \fBccnr_handle\fP *ccnr)"
.br
.ti -1c
.RI "PUBLIC int \fBr_proto_policy_append_basic\fP (struct \fBccnr_handle\fP *ccnr, struct \fBccn_charbuf\fP *policy, const char *version, const char *local_name, const char *global_prefix)"
.br
.ti -1c
.RI "PUBLIC int \fBr_proto_policy_append_namespace\fP (struct \fBccnr_handle\fP *ccnr, struct \fBccn_charbuf\fP *policy, const char *namespace)"
.br
.ti -1c
.RI "PUBLIC int \fBr_proto_parse_policy\fP (struct \fBccnr_handle\fP *ccnr, const unsigned char *buf, size_t length, struct \fBccnr_parsed_policy\fP *pp)"
.br
.RI "\fIParse a ccnb-encoded policy content object and fill in a ccn_parsed_policy structure as the result. \fP"
.ti -1c
.RI "int \fBr_proto_initiate_key_fetch\fP (struct \fBccnr_handle\fP *ccnr, const unsigned char *msg, struct \fBccn_parsed_ContentObject\fP *pco, int use_link, \fBccnr_cookie\fP a)"
.br
.RI "\fIInitiate a key fetch if necessary. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Part of ccnr - CCNx Repository Daemon. 


.PP
Definition in file \fBccnr_proto.c\fP.
.SH "Define Documentation"
.PP 
.SS "#define CCNR_MAX_RETRY   5"
.PP
Definition at line 56 of file ccnr_proto.c.
.PP
Referenced by r_proto_expect_content().
.SS "#define ENUMERATION_STATE_TICK_MICROSEC   1000000"
.PP
Definition at line 940 of file ccnr_proto.c.
.PP
Referenced by reap_enumerations(), and reap_enumerations_needed().
.SH "Function Documentation"
.PP 
.SS "static int name_comp_equal_prefix (const unsigned char * data, const struct \fBccn_indexbuf\fP * indexbuf, unsigned int i, const void * buf, size_t length)\fC [static]\fP"
.PP
Compare a name component at index i to bytes in buf and return 1 if they are equal in the first length bytes. The name component must contain at least length bytes for this comparison to return equality. 
.PP
\fBReturns:\fP
.RS 4
1 for equality, 0 for inequality. 
.RE
.PP

.PP
Definition at line 206 of file ccnr_proto.c.
.PP
Referenced by r_proto_answer_req().
.SS "PUBLIC void r_proto_activate_policy (struct \fBccnr_handle\fP * ccnr, struct \fBccnr_parsed_policy\fP * pp)"
.PP
Install the listener for the namespaces that the parsed policy says to serve. Normal usage is to deactivate the old policy and then activate the new one 
.PP
Definition at line 250 of file ccnr_proto.c.
.PP
Referenced by r_init_create(), and r_proto_policy_update().
.SS "PUBLIC enum \fBccn_upcall_res\fP r_proto_answer_req (struct \fBccn_closure\fP * selfp, enum \fBccn_upcall_kind\fP kind, struct \fBccn_upcall_info\fP * info)"
.PP
Definition at line 93 of file ccnr_proto.c.
.PP
Referenced by r_proto_activate_policy().
.SS "PUBLIC int r_proto_append_repo_info (struct \fBccnr_handle\fP * ccnr, struct \fBccn_charbuf\fP * rinfo, struct \fBccn_charbuf\fP * names, const char * info)"
.PP
Construct a charbuf with an encoding of a RepositoryInfo. 
.PP
Definition at line 297 of file ccnr_proto.c.
.PP
Referenced by r_proto_bulk_import(), r_proto_start_write(), and r_proto_start_write_checked().
.SS "static enum \fBccn_upcall_res\fP r_proto_begin_enumeration (struct \fBccn_closure\fP * selfp, enum \fBccn_upcall_kind\fP kind, struct \fBccn_upcall_info\fP * info, int marker_comp)\fC [static]\fP"
.PP
Definition at line 989 of file ccnr_proto.c.
.PP
Referenced by r_proto_answer_req().
.SS "static enum \fBccn_upcall_res\fP r_proto_bulk_import (struct \fBccn_closure\fP * selfp, enum \fBccn_upcall_kind\fP kind, struct \fBccn_upcall_info\fP * info, int marker_comp)\fC [static]\fP"
.PP
Definition at line 1325 of file ccnr_proto.c.
.PP
Referenced by r_proto_answer_req().
.SS "static int r_proto_check_exclude (struct \fBccnr_handle\fP * ccnr, struct \fBccn_upcall_info\fP * info, struct \fBccn_charbuf\fP * name)\fC [static]\fP"
.PP
Returns 1 if the Exclude in the interest described by the info parameter would exclude the full name in name. 
.PP
Definition at line 863 of file ccnr_proto.c.
.PP
Referenced by r_proto_begin_enumeration().
.SS "static enum \fBccn_upcall_res\fP r_proto_continue_enumeration (struct \fBccn_closure\fP * selfp, enum \fBccn_upcall_kind\fP kind, struct \fBccn_upcall_info\fP * info, int marker_comp)\fC [static]\fP"
.PP
Definition at line 1126 of file ccnr_proto.c.
.PP
Referenced by r_proto_answer_req(), and r_proto_begin_enumeration().
.SS "PUBLIC void r_proto_deactivate_policy (struct \fBccnr_handle\fP * ccnr, struct \fBccnr_parsed_policy\fP * pp)"
.PP
Uninstall the listener for the namespaces that the parsed policy says to serve. 
.PP
Definition at line 272 of file ccnr_proto.c.
.PP
Referenced by r_proto_policy_update().
.SS "void r_proto_dump_enums (struct \fBccnr_handle\fP * ccnr)"
.PP
Definition at line 1307 of file ccnr_proto.c.
.SS "PUBLIC enum \fBccn_upcall_res\fP r_proto_expect_content (struct \fBccn_closure\fP * selfp, enum \fBccn_upcall_kind\fP kind, struct \fBccn_upcall_info\fP * info)"
.PP
Definition at line 340 of file ccnr_proto.c.
.PP
Referenced by r_proto_initiate_key_fetch(), and r_proto_start_write().
.SS "void r_proto_finalize_enum_state (struct \fBhashtb_enumerator\fP * e)"
.PP
Definition at line 926 of file ccnr_proto.c.
.PP
Referenced by r_init_create().
.SS "PUBLIC void r_proto_init (struct \fBccnr_handle\fP * ccnr)"
.PP
Definition at line 241 of file ccnr_proto.c.
.PP
Referenced by r_init_create().
.SS "int r_proto_initiate_key_fetch (struct \fBccnr_handle\fP * ccnr, const unsigned char * msg, struct \fBccn_parsed_ContentObject\fP * pco, int use_link, \fBccnr_cookie\fP a)"
.PP
Initiate a key fetch if necessary. \fBReturns:\fP
.RS 4
-1 if error or no name, 0 if fetch was issued, 1 if already stored. 
.RE
.PP

.PP
Definition at line 1505 of file ccnr_proto.c.
.PP
Referenced by r_proto_expect_content(), and r_sync_upcall_store().
.SS "static struct \fBccn_charbuf\fP* r_proto_mktemplate (struct \fBccnr_expect_content\fP * md, struct \fBccn_upcall_info\fP * info)\fC [static, read]\fP"
.PP
Definition at line 325 of file ccnr_proto.c.
.PP
Referenced by r_proto_expect_content(), and r_proto_start_write().
.SS "PUBLIC int r_proto_parse_policy (struct \fBccnr_handle\fP * ccnr, const unsigned char * buf, size_t length, struct \fBccnr_parsed_policy\fP * pp)"
.PP
Parse a ccnb-encoded policy content object and fill in a ccn_parsed_policy structure as the result. 
.PP
Definition at line 1477 of file ccnr_proto.c.
.PP
Referenced by load_policy(), and r_proto_policy_update().
.SS "PUBLIC int r_proto_policy_append_basic (struct \fBccnr_handle\fP * ccnr, struct \fBccn_charbuf\fP * policy, const char * version, const char * local_name, const char * global_prefix)"
.PP
Definition at line 1445 of file ccnr_proto.c.
.PP
Referenced by load_policy().
.SS "PUBLIC int r_proto_policy_append_namespace (struct \fBccnr_handle\fP * ccnr, struct \fBccn_charbuf\fP * policy, const char * namespace)"
.PP
Definition at line 1459 of file ccnr_proto.c.
.PP
Referenced by load_policy().
.SS "static int r_proto_policy_complete (struct \fBccn_closure\fP * selfp, enum \fBccn_upcall_kind\fP kind, struct \fBccn_upcall_info\fP * info)\fC [static]\fP"
.PP
Definition at line 601 of file ccnr_proto.c.
.PP
Referenced by r_proto_start_write().
.SS "static int r_proto_policy_update (struct ccn_schedule * sched, void * clienth, struct \fBccn_scheduled_event\fP * ev, int flags)\fC [static]\fP"
.PP
Definition at line 485 of file ccnr_proto.c.
.PP
Referenced by r_proto_policy_complete().
.SS "static enum \fBccn_upcall_res\fP r_proto_start_write (struct \fBccn_closure\fP * selfp, enum \fBccn_upcall_kind\fP kind, struct \fBccn_upcall_info\fP * info, int marker_comp)\fC [static]\fP"
.PP
Definition at line 642 of file ccnr_proto.c.
.PP
Referenced by r_proto_answer_req(), and r_proto_start_write_checked().
.SS "static enum \fBccn_upcall_res\fP r_proto_start_write_checked (struct \fBccn_closure\fP * selfp, enum \fBccn_upcall_kind\fP kind, struct \fBccn_upcall_info\fP * info, int marker_comp)\fC [static]\fP"
.PP
Definition at line 762 of file ccnr_proto.c.
.PP
Referenced by r_proto_answer_req().
.SS "PUBLIC void r_proto_uri_listen (struct \fBccnr_handle\fP * ccnr, struct ccn * ccn, const char * uri, \fBccn_handler\fP p, intptr_t intdata)"
.PP
Definition at line 221 of file ccnr_proto.c.
.PP
Referenced by r_proto_activate_policy(), and r_proto_deactivate_policy().
.SS "static int reap_enumerations (struct ccn_schedule * sched, void * clienth, struct \fBccn_scheduled_event\fP * ev, int flags)\fC [static]\fP"
.PP
Remove expired enumeration table entries. 
.PP
Definition at line 945 of file ccnr_proto.c.
.PP
Referenced by reap_enumerations_needed().
.SS "static void reap_enumerations_needed (struct \fBccnr_handle\fP * ccnr)\fC [static]\fP"
.PP
Definition at line 979 of file ccnr_proto.c.
.PP
Referenced by r_proto_begin_enumeration().
.SH "Author"
.PP 
Generated automatically by Doxygen for Content-Centric Networking in C from the source code.
