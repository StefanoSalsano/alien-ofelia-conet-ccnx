.TH "include/ccn/schedule.h" 3 "4 Feb 2013" "Version 0.7.1" "Content-Centric Networking in C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/ccn/schedule.h \- 
.PP
Event scheduling.  

.SH SYNOPSIS
.br
.PP
.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBccn_timeval\fP"
.br
.ti -1c
.RI "struct \fBccn_gettime\fP"
.br
.ti -1c
.RI "struct \fBccn_scheduled_event\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBCCN_SCHEDULE_CANCEL\fP   0x10"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef void(* \fBccn_gettime_action\fP )(const struct \fBccn_gettime\fP *, struct \fBccn_timeval\fP *)"
.br
.ti -1c
.RI "typedef int(* \fBccn_scheduled_action\fP )(struct ccn_schedule *sched, void *clienth, struct \fBccn_scheduled_event\fP *ev, int flags)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "struct ccn_schedule * \fBccn_schedule_create\fP (void *clienth, const struct \fBccn_gettime\fP *ccnclock)"
.br
.ti -1c
.RI "void \fBccn_schedule_destroy\fP (struct ccn_schedule **schedp)"
.br
.ti -1c
.RI "struct \fBccn_gettime\fP * \fBccn_schedule_get_gettime\fP (struct ccn_schedule *)"
.br
.ti -1c
.RI "struct \fBccn_scheduled_event\fP * \fBccn_schedule_event\fP (struct ccn_schedule *sched, int micros, \fBccn_scheduled_action\fP action, void *evdata, intptr_t evint)"
.br
.ti -1c
.RI "int \fBccn_schedule_cancel\fP (struct ccn_schedule *, struct \fBccn_scheduled_event\fP *)"
.br
.RI "\fICancel a scheduled event. \fP"
.ti -1c
.RI "int \fBccn_schedule_run\fP (struct ccn_schedule *)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Event scheduling. 

Part of the CCNx C Library.
.PP
Copyright (C) 2008, 2009 Palo Alto Research Center, Inc.
.PP
This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License version 2.1 as published by the Free Software Foundation. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. 
.PP
Definition in file \fBschedule.h\fP.
.SH "Define Documentation"
.PP 
.SS "#define CCN_SCHEDULE_CANCEL   0x10"
.PP
Definition at line 59 of file schedule.h.
.PP
Referenced by adjacency_do_refresh(), adjacency_do_reset(), age_forwarding(), ccn_schedule_cancel(), ccn_schedule_destroy(), ccnd_do_solicit(), ccnd_flush_guid_cob(), ccnd_internal_client_refresh(), ccnd_notice_push(), ccnr_direct_client_refresh(), ccnr_internal_client_refresh(), ccnr_notice_push(), clean_daemon(), clean_guest(), CompareAction(), compareAction(), content_sender(), do_propagate(), each_round(), expire_content(), fill_holes(), HeartbeatAction(), process_icb_action(), r_proto_policy_update(), r_store_index_cleaner(), r_store_reindexing(), r_sync_enumerate_action(), reap(), reap_enumerations(), reporter(), strategy_timer(), and updateAction().
.SH "Typedef Documentation"
.PP 
.SS "typedef void(* \fBccn_gettime_action\fP)(const struct \fBccn_gettime\fP *, struct \fBccn_timeval\fP *)"
.PP
Definition at line 43 of file schedule.h.
.SS "typedef int(* \fBccn_scheduled_action\fP)(struct ccn_schedule *sched, void *clienth, struct \fBccn_scheduled_event\fP *ev, int flags)"
.PP
Definition at line 60 of file schedule.h.
.SH "Function Documentation"
.PP 
.SS "int ccn_schedule_cancel (struct ccn_schedule * sched, struct \fBccn_scheduled_event\fP * ev)"
.PP
Cancel a scheduled event. Cancels the event (calling action with CCN_SCHEDULE_CANCEL set) 
.PP
\fBReturns:\fP
.RS 4
0 if OK, or -1 if this is not possible. 
.RE
.PP

.PP
Definition at line 268 of file ccn_schedule.c.
.PP
Referenced by ccnd_internal_client_stop(), ccnr_direct_client_stop(), ccnr_internal_client_stop(), ccns_close(), content_queue_destroy(), destroyCompareData(), finalize_interest(), kickCompare(), kickUpdate(), propagate_interest(), r_sendq_content_queue_destroy(), resetDiffData(), resetUpdateData(), start_round(), strategy_settimer(), sync_diff_stop(), and update_npe_children().
.SS "struct ccn_schedule* ccn_schedule_create (void * clienth, const struct \fBccn_gettime\fP * ccnclock)\fC [read]\fP"
.PP
Definition at line 100 of file ccn_schedule.c.
.PP
Referenced by ccnd_create(), ccns_open(), main(), and r_init_create().
.SS "void ccn_schedule_destroy (struct ccn_schedule ** schedp)"
.PP
Definition at line 116 of file ccn_schedule.c.
.PP
Referenced by ccn_destroy(), ccnd_destroy(), incoming_content(), main(), and r_init_destroy().
.SS "struct \fBccn_scheduled_event\fP* ccn_schedule_event (struct ccn_schedule * sched, int micros, \fBccn_scheduled_action\fP action, void * evdata, intptr_t evint)\fC [read]\fP"
.PP
Definition at line 234 of file ccn_schedule.c.
.PP
Referenced by adjacency_timed_reset(), age_forwarding_needed(), ccnd_face_status_change(), ccnd_init_face_guid_cob(), ccnd_internal_client_has_somthing_to_say(), ccnd_internal_client_start(), ccnd_register_adjacency(), ccnd_req_guest(), ccnr_direct_client_start(), ccnr_face_status_change(), ccnr_internal_client_start(), clean_needed(), face_send_queue_insert(), kickCompare(), kickHeartBeat(), kickUpdate(), main(), propagate_interest(), r_proto_policy_complete(), r_sendq_face_send_queue_insert(), r_store_index_needs_cleaning(), r_store_init(), r_store_set_content_timer(), reap_enumerations_needed(), reap_needed(), schedule_adjacency_negotiation(), set_content_timer(), start_round(), strategy_settimer(), SyncStartHeartbeat(), SyncUpdateRoot(), update_npe_children(), and update_rtt().
.SS "struct \fBccn_gettime\fP* ccn_schedule_get_gettime (struct ccn_schedule *)\fC [read]\fP"
.PP
Definition at line 142 of file ccn_schedule.c.
.SS "int ccn_schedule_run (struct ccn_schedule *)"
.PP
Definition at line 317 of file ccn_schedule.c.
.PP
Referenced by ccn_run(), ccnd_run(), main(), r_dispatch_run(), and r_init_create().
.SH "Author"
.PP 
Generated automatically by Doxygen for Content-Centric Networking in C from the source code.
