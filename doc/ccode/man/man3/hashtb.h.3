.TH "include/ccn/hashtb.h" 3 "4 Feb 2013" "Version 0.7.1" "Content-Centric Networking in C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/ccn/hashtb.h \- 
.PP
Hash table.  

.SH SYNOPSIS
.br
.PP
.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBhashtb_param\fP"
.br
.ti -1c
.RI "struct \fBhashtb_enumerator\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBHT_OLD_ENTRY\fP   0"
.br
.ti -1c
.RI "#define \fBHT_NEW_ENTRY\fP   1"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef void(* \fBhashtb_finalize_proc\fP )(struct \fBhashtb_enumerator\fP *)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "struct hashtb * \fBhashtb_create\fP (size_t item_size, const struct \fBhashtb_param\fP *param)"
.br
.ti -1c
.RI "void * \fBhashtb_get_param\fP (struct hashtb *ht, struct \fBhashtb_param\fP *param)"
.br
.ti -1c
.RI "void \fBhashtb_destroy\fP (struct hashtb **ht)"
.br
.ti -1c
.RI "int \fBhashtb_n\fP (struct hashtb *ht)"
.br
.ti -1c
.RI "void * \fBhashtb_lookup\fP (struct hashtb *ht, const void *key, size_t keysize)"
.br
.ti -1c
.RI "struct \fBhashtb_enumerator\fP * \fBhashtb_start\fP (struct hashtb *, struct \fBhashtb_enumerator\fP *)"
.br
.ti -1c
.RI "void \fBhashtb_end\fP (struct \fBhashtb_enumerator\fP *)"
.br
.ti -1c
.RI "void \fBhashtb_next\fP (struct \fBhashtb_enumerator\fP *)"
.br
.ti -1c
.RI "int \fBhashtb_seek\fP (struct \fBhashtb_enumerator\fP *hte, const void *key, size_t keysize, size_t extsize)"
.br
.ti -1c
.RI "void \fBhashtb_delete\fP (struct \fBhashtb_enumerator\fP *)"
.br
.ti -1c
.RI "void \fBhashtb_rehash\fP (struct hashtb *ht, unsigned n_buckets)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Hash table. 

Part of the CCNx C Library.
.PP
Copyright (C) 2008, 2009 Palo Alto Research Center, Inc.
.PP
This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License version 2.1 as published by the Free Software Foundation. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. 
.PP
Definition in file \fBhashtb.h\fP.
.SH "Define Documentation"
.PP 
.SS "#define HT_NEW_ENTRY   1"
.PP
Definition at line 112 of file hashtb.h.
.PP
Referenced by ccn_btree_getnode(), ccn_cache_key(), ccn_express_interest(), ccn_load_private_key(), ccn_locate_key(), ccnd_set_face_guid(), finalize_content(), hashtb_seek(), nameprefix_seek(), process_incoming_content(), propagate_interest(), r_proto_begin_enumeration(), r_store_forget_content(), and record_connection().
.SS "#define HT_OLD_ENTRY   0"
.PP
Definition at line 111 of file hashtb.h.
.PP
Referenced by ccn_get_public_key(), ccn_load_private_key(), ccn_sign_content(), ccnd_reg_prefix(), consume_interest(), hashtb_seek(), main(), process_incoming_content(), r_proto_begin_enumeration(), r_proto_continue_enumeration(), remove_content(), and shutdown_client_fd().
.SH "Typedef Documentation"
.PP 
.SS "typedef void(* \fBhashtb_finalize_proc\fP)(struct \fBhashtb_enumerator\fP *)"
.PP
Definition at line 29 of file hashtb.h.
.SH "Function Documentation"
.PP 
.SS "struct hashtb* hashtb_create (size_t item_size, const struct \fBhashtb_param\fP * param)\fC [read]\fP"
.PP
Definition at line 62 of file hashtb.c.
.PP
Referenced by ccn_btree_create(), ccn_create(), ccn_express_interest(), ccn_set_interest_filter_with_flags(), ccnd_create(), main(), r_init_create(), and r_store_init().
.SS "void hashtb_delete (struct \fBhashtb_enumerator\fP *)"
.PP
Definition at line 261 of file hashtb.c.
.PP
Referenced by ccn_cache_key(), ccn_clean_all_interests(), ccn_get_public_key(), ccn_set_interest_filter_with_flags(), ccn_sign_content(), ccnd_destroy_face(), ccnd_forget_face_guid(), ccnd_shutdown_listeners(), check_dgram_faces(), check_nameprefix_entries(), clean_guest(), consume_interest(), finalize_content(), get_dgram_source(), hashtb_destroy(), main(), process_incoming_content(), r_store_forget_content(), r_store_index_cleaner(), reap_enumerations(), record_connection(), remove_content(), and shutdown_client_fd().
.SS "void hashtb_destroy (struct hashtb ** ht)"
.PP
Definition at line 90 of file hashtb.c.
.PP
Referenced by ccn_btree_destroy(), ccn_destroy(), ccnd_destroy(), main(), and r_init_destroy().
.SS "void hashtb_end (struct \fBhashtb_enumerator\fP *)"
.PP
Definition at line 179 of file hashtb.c.
.PP
Referenced by age_forwarding(), ccn_btree_getnode(), ccn_cache_key(), ccn_clean_all_interests(), ccn_destroy(), ccn_disconnect(), ccn_express_interest(), ccn_get_public_key(), ccn_load_private_key(), ccn_locate_key(), ccn_notify_ccndid_changed(), ccn_process_scheduled_operations(), ccn_set_interest_filter_with_flags(), ccn_sign_content(), ccnd_collect_stats(), ccnd_destroy_face(), ccnd_forget_face_guid(), ccnd_getboundsocket(), ccnd_reg_prefix(), ccnd_req_guest(), ccnd_set_face_guid(), ccnd_shutdown_listeners(), ccnr_collect_stats(), check_dgram_faces(), check_nameprefix_entries(), clean_guest(), cleanout_stragglers(), collect_forwarding_html(), collect_forwarding_xml(), consume_interest(), Dump(), finalize_content(), get_dgram_source(), hashtb_destroy(), main(), make_connection(), prepare_poll_fds(), process_incoming_content(), process_incoming_interest(), propagate_interest(), r_proto_begin_enumeration(), r_proto_continue_enumeration(), r_proto_dump_enums(), r_store_enroll_content(), r_store_forget_content(), r_store_index_cleaner(), r_store_set_accession_from_offset(), reap_enumerations(), record_connection(), remove_content(), setup_multicast(), shutdown_client_fd(), and update_npe_children().
.SS "void* hashtb_get_param (struct hashtb * ht, struct \fBhashtb_param\fP * param)"
.PP
Definition at line 82 of file hashtb.c.
.PP
Referenced by finalize_accession(), finalize_content(), finalize_face(), finalize_interest(), finalize_nameprefix(), finalize_node(), finally(), and r_fwd_finalize_nameprefix().
.SS "void* hashtb_lookup (struct hashtb * ht, const void * key, size_t keysize)"
.PP
Definition at line 115 of file hashtb.c.
.PP
Referenced by ccn_btree_rnode(), ccn_check_pub_arrival(), ccn_dispatch_message(), ccn_locate_key(), ccnd_debug_ccnb(), ccnd_faceid_from_guid(), ccnd_req_unreg(), content_from_accession(), do_deferred_write(), faceid_from_fd(), main(), match_interests(), process_incoming_interest(), process_input(), r_match_match_interests(), r_store_content_from_accession(), and r_store_look().
.SS "int hashtb_n (struct hashtb * ht)"
.PP
Definition at line 109 of file hashtb.c.
.PP
Referenced by ccn_btree_check(), clean_daemon(), cleanout_stragglers(), collect_stats_html(), collect_stats_xml(), Dump(), expire_content(), prepare_poll_fds(), process_incoming_content(), r_store_index_cleaner(), reap_enumerations(), and test_btree_init().
.SS "void hashtb_next (struct \fBhashtb_enumerator\fP *)"
.PP
Definition at line 203 of file hashtb.c.
.PP
Referenced by age_forwarding(), ccn_clean_all_interests(), ccn_destroy(), ccn_disconnect(), ccn_notify_ccndid_changed(), ccn_process_scheduled_operations(), ccnd_collect_stats(), ccnd_getboundsocket(), ccnd_shutdown_listeners(), ccnr_collect_stats(), check_dgram_faces(), check_nameprefix_entries(), collect_forwarding_html(), collect_forwarding_xml(), Dump(), make_connection(), prepare_poll_fds(), r_proto_dump_enums(), r_store_index_cleaner(), reap_enumerations(), setup_multicast(), and update_npe_children().
.SS "void hashtb_rehash (struct hashtb * ht, unsigned n_buckets)"
.PP
Definition at line 286 of file hashtb.c.
.PP
Referenced by hashtb_seek().
.SS "int hashtb_seek (struct \fBhashtb_enumerator\fP * hte, const void * key, size_t keysize, size_t extsize)"
.PP
Definition at line 217 of file hashtb.c.
.PP
Referenced by ccn_btree_getnode(), ccn_cache_key(), ccn_express_interest(), ccn_get_public_key(), ccn_load_private_key(), ccn_locate_key(), ccn_set_interest_filter_with_flags(), ccn_sign_content(), ccnd_destroy_face(), ccnd_forget_face_guid(), ccnd_req_guest(), ccnd_set_face_guid(), clean_guest(), cleanout_stragglers(), consume_interest(), finalize_content(), get_dgram_source(), main(), nameprefix_seek(), process_incoming_content(), propagate_interest(), r_proto_begin_enumeration(), r_proto_continue_enumeration(), r_store_enroll_content(), r_store_forget_content(), r_store_set_accession_from_offset(), record_connection(), remove_content(), and shutdown_client_fd().
.SS "struct \fBhashtb_enumerator\fP* hashtb_start (struct hashtb *, struct \fBhashtb_enumerator\fP *)\fC [read]\fP"
.PP
Definition at line 166 of file hashtb.c.
.PP
Referenced by age_forwarding(), ccn_btree_getnode(), ccn_cache_key(), ccn_clean_all_interests(), ccn_destroy(), ccn_disconnect(), ccn_express_interest(), ccn_get_public_key(), ccn_load_private_key(), ccn_locate_key(), ccn_notify_ccndid_changed(), ccn_process_scheduled_operations(), ccn_set_interest_filter_with_flags(), ccn_sign_content(), ccnd_collect_stats(), ccnd_destroy_face(), ccnd_forget_face_guid(), ccnd_getboundsocket(), ccnd_reg_prefix(), ccnd_req_guest(), ccnd_set_face_guid(), ccnd_shutdown_listeners(), ccnr_collect_stats(), check_dgram_faces(), check_nameprefix_entries(), clean_guest(), cleanout_stragglers(), collect_forwarding_html(), collect_forwarding_xml(), consume_interest(), Dump(), finalize_content(), get_dgram_source(), hashtb_destroy(), main(), make_connection(), prepare_poll_fds(), process_incoming_content(), process_incoming_interest(), propagate_interest(), r_proto_begin_enumeration(), r_proto_continue_enumeration(), r_proto_dump_enums(), r_store_enroll_content(), r_store_forget_content(), r_store_index_cleaner(), r_store_set_accession_from_offset(), reap_enumerations(), record_connection(), remove_content(), setup_multicast(), shutdown_client_fd(), and update_npe_children().
.SH "Author"
.PP 
Generated automatically by Doxygen for Content-Centric Networking in C from the source code.
