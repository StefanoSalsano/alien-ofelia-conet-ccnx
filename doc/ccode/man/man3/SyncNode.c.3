.TH "sync/SyncNode.c" 3 "4 Feb 2013" "Version 0.7.1" "Content-Centric Networking in C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sync/SyncNode.c \- 
.PP
Part of CCNx Sync.  

.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBSyncSetCompErr\fP (struct \fBSyncNodeComposite\fP *nc, int val)"
.br
.RI "\fISets the error field when there is a processing error. \fP"
.ti -1c
.RI "int \fBSyncCheckCompErr\fP (struct \fBSyncNodeComposite\fP *nc)"
.br
.RI "\fITests the error field for an error returns 0 for no error != 0 for an error). \fP"
.ti -1c
.RI "struct \fBccn_buf_decoder\fP * \fBSyncInitDecoderFromOffset\fP (struct \fBccn_buf_decoder\fP *d, struct \fBSyncNodeComposite\fP *nc, ssize_t start, ssize_t stop)"
.br
.RI "\fIMakes a decoder from an offset range using the node charbuf. \fP"
.ti -1c
.RI "struct \fBccn_buf_decoder\fP * \fBSyncInitDecoderFromElem\fP (struct \fBccn_buf_decoder\fP *d, struct \fBSyncNodeComposite\fP *nc, struct \fBSyncNodeElem\fP *ep)"
.br
.RI "\fIMakes a decoder from an element. \fP"
.ti -1c
.RI "void \fBSyncNodeIncRC\fP (struct \fBSyncNodeComposite\fP *nc)"
.br
.RI "\fIIncrements the reference count. \fP"
.ti -1c
.RI "struct \fBSyncNodeComposite\fP * \fBSyncNodeDecRC\fP (struct \fBSyncNodeComposite\fP *nc)"
.br
.RI "\fIDecrements the reference count. \fP"
.ti -1c
.RI "enum \fBSyncCompareResult\fP \fBSyncNodeCompareMinMax\fP (struct \fBSyncNodeComposite\fP *nc, struct \fBccn_charbuf\fP *name)"
.br
.RI "\fICompares a name against the min and max names in the node. \fP"
.ti -1c
.RI "enum \fBSyncCompareResult\fP \fBSyncNodeCompareLeaf\fP (struct \fBSyncNodeComposite\fP *nc, struct \fBSyncNodeElem\fP *ep, struct \fBccn_charbuf\fP *name)"
.br
.RI "\fICompares a name against the leaf in the element. \fP"
.ti -1c
.RI "void \fBSyncResetComposite\fP (struct \fBSyncNodeComposite\fP *nc)"
.br
.RI "\fIresets a composite node to its initial state except that it retains any allocated storage \fP"
.ti -1c
.RI "struct \fBSyncNodeComposite\fP * \fBSyncAllocComposite\fP (struct \fBSyncBaseStruct\fP *base)"
.br
.RI "\fIallocates a new, empty, composite object \fP"
.ti -1c
.RI "void \fBSyncExtendComposite\fP (struct \fBSyncNodeComposite\fP *nc, \fBSyncElemKind\fP kind, ssize_t start, ssize_t stop)"
.br
.RI "\fIextends the references section of a composite object with a new offset pair useful if NOT using SyncNodeAddName and SyncNodeAddNode \fP"
.ti -1c
.RI "void \fBSyncNodeMaintainMinMax\fP (struct \fBSyncNodeComposite\fP *nc, const struct \fBccn_charbuf\fP *name)"
.br
.RI "\fImaintains the minName and maxName bounds useful if NOT using SyncNodeAddName and SyncNodeAddNode \fP"
.ti -1c
.RI "void \fBSyncNodeAddName\fP (struct \fBSyncNodeComposite\fP *nc, const struct \fBccn_charbuf\fP *name)"
.br
.RI "\fIextends the references section of a composite object with a new name, updating the composite fields (including the name bounds) the names MUST be added in sorted order! \fP"
.ti -1c
.RI "void \fBSyncNodeAddNode\fP (struct \fBSyncNodeComposite\fP *nc, struct \fBSyncNodeComposite\fP *node)"
.br
.RI "\fIextends the references section of a composite object with a new node, updating the composite fields (including the name bounds) the nodes MUST be added in sorted order! \fP"
.ti -1c
.RI "int \fBSyncNodeAppendLongHash\fP (struct \fBccn_charbuf\fP *cb, struct \fBSyncNodeComposite\fP *nc)"
.br
.RI "\fIappends the ccnb encoding for the long hash of nc to cb \fP"
.ti -1c
.RI "void \fBSyncEndComposite\fP (struct \fBSyncNodeComposite\fP *nc)"
.br
.RI "\fIendComposite finishes up the encoding, appending the composite fields the hash field will be valid after this call \fP"
.ti -1c
.RI "void \fBSyncFreeComposite\fP (struct \fBSyncNodeComposite\fP *nc)"
.br
.RI "\fIfreeComposite returns the storage for the composite object \fP"
.ti -1c
.RI "void \fBSyncWriteComposite\fP (struct \fBSyncNodeComposite\fP *nc, FILE *f)"
.br
.RI "\fIwrites the encoding to a file (primarily useful for test and debug code) \fP"
.ti -1c
.RI "int \fBSyncParseComposite\fP (struct \fBSyncNodeComposite\fP *nc, struct \fBccn_buf_decoder\fP *d)"
.br
.RI "\fIparses an encoded node and fills in the supplied node implicitly resets the node at the start of the parse \fP"
.ti -1c
.RI "struct \fBSyncNodeComposite\fP * \fBSyncNodeFromBytes\fP (struct \fBSyncRootStruct\fP *root, const unsigned char *cp, size_t cs)"
.br
.ti -1c
.RI "struct \fBSyncNodeComposite\fP * \fBSyncNodeFromParsedObject\fP (struct \fBSyncRootStruct\fP *root, const unsigned char *msg, struct \fBccn_parsed_ContentObject\fP *pco)"
.br
.ti -1c
.RI "struct \fBSyncNodeComposite\fP * \fBSyncNodeFromInfo\fP (struct \fBSyncRootStruct\fP *root, struct \fBccn_upcall_info\fP *info)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Part of CCNx Sync. 


.PP
Definition in file \fBSyncNode.c\fP.
.SH "Function Documentation"
.PP 
.SS "struct \fBSyncNodeComposite\fP* SyncAllocComposite (struct \fBSyncBaseStruct\fP * base)\fC [read]\fP"
.PP
allocates a new, empty, composite object 
.PP
Definition at line 157 of file SyncNode.c.
.PP
Referenced by extractNode(), MakeNodeFromNames(), node_from_names(), node_from_nodes(), nodeFromNodes(), SyncCacheEntryFetch(), SyncNodeFromBytes(), testEncodeDecode(), and testGenComposite().
.SS "int SyncCheckCompErr (struct \fBSyncNodeComposite\fP * nc)"
.PP
Tests the error field for an error returns 0 for no error != 0 for an error). 
.PP
Definition at line 38 of file SyncNode.c.
.PP
Referenced by SyncEndComposite(), and SyncParseComposite().
.SS "void SyncEndComposite (struct \fBSyncNodeComposite\fP * nc)"
.PP
endComposite finishes up the encoding, appending the composite fields the hash field will be valid after this call 
.PP
Definition at line 262 of file SyncNode.c.
.PP
Referenced by MakeNodeFromNames(), node_from_names(), node_from_nodes(), nodeFromNodes(), and testGenComposite().
.SS "void SyncExtendComposite (struct \fBSyncNodeComposite\fP * nc, \fBSyncElemKind\fP kind, ssize_t start, ssize_t stop)"
.PP
extends the references section of a composite object with a new offset pair useful if NOT using SyncNodeAddName and SyncNodeAddNode 
.PP
Definition at line 168 of file SyncNode.c.
.PP
Referenced by SyncNodeAddName(), SyncNodeAddNode(), and SyncParseComposite().
.SS "void SyncFreeComposite (struct \fBSyncNodeComposite\fP * nc)"
.PP
freeComposite returns the storage for the composite object 
.PP
Definition at line 291 of file SyncNode.c.
.PP
Referenced by extractNode(), newNodeCommon(), SyncCacheEntryFetch(), SyncNodeDecRC(), SyncNodeFromBytes(), and testEncodeDecode().
.SS "struct \fBccn_buf_decoder\fP* SyncInitDecoderFromElem (struct \fBccn_buf_decoder\fP * d, struct \fBSyncNodeComposite\fP * nc, struct \fBSyncNodeElem\fP * ep)\fC [read]\fP"
.PP
Makes a decoder from an element. 
.PP
Definition at line 54 of file SyncNode.c.
.PP
Referenced by extractBuf().
.SS "struct \fBccn_buf_decoder\fP* SyncInitDecoderFromOffset (struct \fBccn_buf_decoder\fP * d, struct \fBSyncNodeComposite\fP * nc, ssize_t start, ssize_t stop)\fC [read]\fP"
.PP
Makes a decoder from an offset range using the node charbuf. 
.PP
Definition at line 43 of file SyncNode.c.
.PP
Referenced by cacheEntryForElem(), printTreeInner(), SyncNodeCompareLeaf(), SyncTreeGenerateNames(), and SyncTreeWorkerPush().
.SS "void SyncNodeAddName (struct \fBSyncNodeComposite\fP * nc, const struct \fBccn_charbuf\fP * name)"
.PP
extends the references section of a composite object with a new name, updating the composite fields (including the name bounds) the names MUST be added in sorted order! 
.PP
Definition at line 217 of file SyncNode.c.
.PP
Referenced by MakeNodeFromNames(), node_from_names(), and testGenComposite().
.SS "void SyncNodeAddNode (struct \fBSyncNodeComposite\fP * nc, struct \fBSyncNodeComposite\fP * node)"
.PP
extends the references section of a composite object with a new node, updating the composite fields (including the name bounds) the nodes MUST be added in sorted order! 
.PP
Definition at line 230 of file SyncNode.c.
.PP
Referenced by node_from_nodes(), and nodeFromNodes().
.SS "int SyncNodeAppendLongHash (struct \fBccn_charbuf\fP * cb, struct \fBSyncNodeComposite\fP * nc)"
.PP
appends the ccnb encoding for the long hash of nc to cb 
.PP
Definition at line 249 of file SyncNode.c.
.PP
Referenced by SyncEndComposite(), and SyncNodeAddNode().
.SS "enum \fBSyncCompareResult\fP SyncNodeCompareLeaf (struct \fBSyncNodeComposite\fP * nc, struct \fBSyncNodeElem\fP * ep, struct \fBccn_charbuf\fP * name)"
.PP
Compares a name against the leaf in the element. 
.PP
Definition at line 100 of file SyncNode.c.
.PP
Referenced by merge_names(), SyncTreeLookupName(), and SyncTreeMergeNames().
.SS "enum \fBSyncCompareResult\fP SyncNodeCompareMinMax (struct \fBSyncNodeComposite\fP * nc, struct \fBccn_charbuf\fP * name)"
.PP
Compares a name against the min and max names in the node. 
.PP
Definition at line 85 of file SyncNode.c.
.PP
Referenced by BuildTree(), doComparison(), and SyncTreeLookupName().
.SS "struct \fBSyncNodeComposite\fP* SyncNodeDecRC (struct \fBSyncNodeComposite\fP * nc)\fC [read]\fP"
.PP
Decrements the reference count. \fBReturns:\fP
.RS 4
nc if the resulting count is > 0. 
.PP
NULL if the resulting count == 0 (and frees the node). 
.RE
.PP

.PP
Definition at line 69 of file SyncNode.c.
.PP
Referenced by localFreeEntry(), my_response(), newNodeCommon(), and purgeOldEntries().
.SS "struct \fBSyncNodeComposite\fP* SyncNodeFromBytes (struct \fBSyncRootStruct\fP * root, const unsigned char * cp, size_t cs)\fC [read]\fP"
.PP
Definition at line 440 of file SyncNode.c.
.PP
Referenced by SyncNodeFromParsedObject().
.SS "struct \fBSyncNodeComposite\fP* SyncNodeFromInfo (struct \fBSyncRootStruct\fP * root, struct \fBccn_upcall_info\fP * info)\fC [read]\fP"
.PP
Definition at line 469 of file SyncNode.c.
.SS "struct \fBSyncNodeComposite\fP* SyncNodeFromParsedObject (struct \fBSyncRootStruct\fP * root, const unsigned char * msg, struct \fBccn_parsed_ContentObject\fP * pco)\fC [read]\fP"
.PP
Definition at line 454 of file SyncNode.c.
.PP
Referenced by start_node_fetch(), and SyncNodeFromInfo().
.SS "void SyncNodeIncRC (struct \fBSyncNodeComposite\fP * nc)"
.PP
Increments the reference count. 
.PP
Definition at line 63 of file SyncNode.c.
.PP
Referenced by MakeNodeFromNames(), my_response(), newNodeCommon(), node_from_names(), SyncCacheEntryFetch(), SyncRemoteFetchResponse(), and SyncRootAdviseResponse().
.SS "void SyncNodeMaintainMinMax (struct \fBSyncNodeComposite\fP * nc, const struct \fBccn_charbuf\fP * name)"
.PP
maintains the minName and maxName bounds useful if NOT using SyncNodeAddName and SyncNodeAddNode 
.PP
Definition at line 194 of file SyncNode.c.
.PP
Referenced by SyncNodeAddName(), and SyncNodeAddNode().
.SS "int SyncParseComposite (struct \fBSyncNodeComposite\fP * nc, struct \fBccn_buf_decoder\fP * d)"
.PP
parses an encoded node and fills in the supplied node implicitly resets the node at the start of the parse \fBReturns:\fP
.RS 4
nc->err 
.RE
.PP

.PP
Definition at line 310 of file SyncNode.c.
.PP
Referenced by extractNode(), SyncCacheEntryFetch(), SyncNodeFromBytes(), and testEncodeDecode().
.SS "void SyncResetComposite (struct \fBSyncNodeComposite\fP * nc)"
.PP
resets a composite node to its initial state except that it retains any allocated storage 
.PP
Definition at line 128 of file SyncNode.c.
.PP
Referenced by SyncAllocComposite(), SyncFreeComposite(), and SyncParseComposite().
.SS "int SyncSetCompErr (struct \fBSyncNodeComposite\fP * nc, int val)"
.PP
Sets the error field when there is a processing error. 
.PP
Definition at line 31 of file SyncNode.c.
.PP
Referenced by SyncEndComposite(), and SyncParseComposite().
.SS "void SyncWriteComposite (struct \fBSyncNodeComposite\fP * nc, FILE * f)"
.PP
writes the encoding to a file (primarily useful for test and debug code) 
.PP
Definition at line 304 of file SyncNode.c.
.PP
Referenced by testEncodeDecode(), and testReadBuilder().
.SH "Author"
.PP 
Generated automatically by Doxygen for Content-Centric Networking in C from the source code.
